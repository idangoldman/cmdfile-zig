# schema/structs/task.toml
# Task structure definition

[struct]
name = "task"
description = "Individual task definition with command and configuration"

[fields.command]
aliases = ["cmd"]
description = "Shell command to execute for this task"
examples = ["echo 'Hello World'", "npm run build", "python script.py"]
pattern = "${common.patterns.not_empty_string}"
required = true
type = "${common.types.string}"

[fields.description]
aliases = ["desc"]
description = "Human-readable description of what this task does"
examples = ["Build the project", "Run tests", "Deploy to production"]
pattern = "${common.patterns.not_empty_string}"
required = false
type = "${common.types.optional_string}"

[fields.confirm]
default = false
description = "Require user confirmation before executing this task"
examples = ["true", "false"]
required = false
pattern = "${common.patterns.boolean}"
type = "${common.types.boolean}"

[fields.dependencies]
aliases = ["deps"]
description = "List of task names that must complete successfully before this task runs"
examples = ["build", "test"]
pattern = "${common.patterns.name}"
required = false
type = "${common.types.optional_string_array}"

[fields.working_directory]
description = "Override default working directory for this task"
reference = "${common.structs.settings.fields.working_directory}"

[fields.shell]
description = "Override default shell for this task"
reference = "${common.structs.settings.fields.shell}"

[fields.environment_variables]
description = "Task-specific environment variables"
reference = "${common.structs.settings.fields.environment_variables}"

[fields.variables]
description = "Task-specific template variables for command substitution"
reference = "${common.structs.settings.fields.variables}"
