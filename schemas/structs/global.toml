# schema/structs/settings.toml
# Global settings structure

[struct]
name = "Global"
description = "Global default settings that apply to all tasks"

[fields.environment_file]
aliases = ["env_file"]
default = false
description = "Automatically load environment variables from based on the environment file paths default or defined in the settings"
examples = ["true", "false"]
pattern = "${common.patterns.boolean}"
required = false
type = "${common.types.boolean}"

[fields.environment_file_paths]
aliases = ["env_file_paths"]
default = [".env"]
description = "Custom path to environment files to load. If not set, defaults to ['.env']"
examples = [".env", "./config/.env", "~/myproject/.env"]
pattern = "${common.patterns.not_empty_string}"
required = false
type = "${common.types.optional_string_array}"

[fields.working_directory]
aliases = ["work_dir"]
default = "."
description = "Default working directory for all tasks"
examples = [".", "/home/user/project", "C:\\Users\\User\\Project"]
pattern = "${common.patterns.not_empty_string}"
required = false
type = "${common.types.string}"

[fields.shell]
aliases = ["sh"]
default = "$SHELL"
description = "Shell to use for command execution"
examples = ["/bin/bash", "/bin/zsh", "/opt/homebrew/bin/fish", "C:\\Windows\\System32\\cmd.exe"]
pattern = "${common.patterns.not_empty_string}"
required = false
type = "${common.types.string}"

[fields.environment_variables]
aliases = ["env_vars"]
description = "Default environment variables for all tasks"
examples = ["{ NODE_ENV = 'production', DEBUG = 'true' }", "{ RAILS_ENV = 'development', DATABASE_URL = 'postgres://localhost/mydb' }"]
pattern_key = "${common.patterns.constant}"
pattern_value = "${common.patterns.not_empty_string}"
required = false
type = "${common.types.optional_string_map}"

[fields.variables]
aliases = ["vars"]
description = "Default template variables for command substitution"
examples = ["{ project_name = 'MyProject', version = '1.0.0' }", "{ user = 'admin', path = '/usr/local/bin' }"]
pattern_key = "${common.patterns.name}"
pattern_value = "${common.patterns.not_empty_string}"
required = false
type = "${common.types.optional_string_map}"
