# cmdfile Configuration Schema
# This file defines the validation rules and structure for cmdfile.toml configuration files

[schema]
description = "Schema definition for cmdfile TOML configuration files"
version = "0.0.1"

# Global default settings section
[schema.global]
description = "Global default settings that apply to all tasks"
required = false

[schema.global.properties.shell]
ref = "definitions.shell"

[schema.global.properties.work_dir]
ref = "definitions.work_dir"

[schema.global.properties.env_file]
ref = "definitions.env_file"

[schema.global.properties.env_file_path]
ref = "definitions.env_file_path"

# Variables section for template substitution
[schema.variables]
ref = "definitions.variables"

# Environment variables section
[schema.environment]
ref = "definitions.environment"

# Tasks section - core functionality
[schema.tasks]
description = "Task definitions"
required = true
type = "object"
key_pattern = "^[a-z_][a-z0-9_]{1,64}$"
value_type = "task_definition"
min_properties = 1
unique_keys = true

# Task definition structure
[schema.tasks.task_definition]
description = "Individual task configuration"
type = "object"

[schema.tasks.task_definition.properties.command]
type = "string"
description = "Shell command to execute"
required = true
min_length = 1
examples = ["echo 'Hello, World!'", "npm run build", "python script.py"]
pattern = "^[^\\0]+$"

[schema.tasks.task_definition.properties.description]
type = "string"
description = "Human-readable description of the task"
required = false

[schema.tasks.task_definition.properties.dependencies]
type = "array"
description = "Tasks that must complete successfully before this task runs"
required = false
item_type = "string"
item_pattern = "^[a-z_][a-z0-9_]{1,64}$"
examples = ["build", "test"]
unique_items = true

[schema.tasks.task_definition.properties.shell]
description = "Override global shell for this task"
ref = "definitions.shell"

[schema.tasks.task_definition.properties.work_dir]
description = "Override default working directory for this task"
ref = "definitions.work_dir"

[schema.tasks.task_definition.properties.variables]
description = "Task-specific variables, overriding global variables"
ref = "definitions.variables"

[schema.tasks.task_definition.properties.environment]
description = "Task-specific environment variables, overriding global environment variables"
ref = "definitions.environment"

[definitions.shell]
type = "string"
description = "Shell to use for command execution"
examples = ["/bin/bash", "/bin/sh", "powershell", "cmd", "zsh", "fish"]
pattern = "^[^\\0]*$"

[definitions.work_dir]
type = "string"
description = "Working directory for task execution"
examples = [".", "/path/to/workdir"]
pattern = "^[^\\0]*$"

[definitions.env_file]
type = "boolean"
description = "Whether to automatically load .env file"
default = false

[definitions.env_file_path]
type = "string"
description = "Path to the .env file to load"
default = ".env"
examples = [".env", "/path/to/.env"]
pattern = "^[^\\0]*$"

[definitions.variables]
type = "object"
description = "Global variables available to all tasks using ${variable_name} syntax, limiting to alphanumeric and underscore characters, starting with a letter or underscore, and between 2 and 64 characters long"
examples = ["${project_name}", "${version}"]
key_pattern = "^[a-z_][a-z0-9_]{1,64}$"
value_type = "string"
min_properties = 1
unique_keys = true

[definitions.environment]
type = "object"
description = "Global environment variables for all tasks, using uppercase letters, underscores, and digits, starting with a letter or underscore, and between 2 and 64 characters long"
examples = ["${PATH}", "${HOME}", "${USER}"]
key_pattern = "^[A-Z_][A-Z0-9_]{1,64}$"
value_type = "string"
min_properties = 1
unique_keys = true
