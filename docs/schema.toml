# cmdfile Configuration Schema
# This file defines the validation rules and structure for cmdfile.toml configuration files

[schema]
version = "0.0.1"
description = "Schema definition for cmdfile TOML configuration files"

# Global default settings section
[schema.defaults]
description = "Global default settings that apply to all tasks"
required = false

[schema.defaults.properties]

[schema.defaults.properties.shell]
type = "string"
description = "Default shell for command execution"
default = "/bin/bash"
examples = ["/bin/bash", "/bin/sh", "powershell", "cmd"]

[schema.defaults.properties.work_dir]
type = "string"
description = "Default working directory for task execution"
default = "."
pattern = "^[^\\0]*$"

[schema.defaults.properties.env_file]
type = "boolean"
description = "Whether to automatically load .env file"
default = false

[schema.defaults.properties.confirm]
type = "boolean"
description = "Require confirmation for tasks before execution"
default = false

[schema.defaults.properties.parallel_limit]
type = "integer"
description = "Maximum number of tasks to run in parallel"
minimum = 1
maximum = 32
default = 4

# Variables section for template substitution
[schema.variables]
description = "Global variables available to all tasks using ${variable_name} syntax, limiting to alphanumeric and underscore characters, starting with a letter or underscore, and between 2 and 64 characters long"
exmples = ["${project_name}", "${version}"]
required = false
type = "object"
key_pattern = "^[a-z_][a-z0-9_]{1,64}$"
value_type = "string"

# Environment variables section
[schema.environment]
description = "Global environment variables for all tasks, using uppercase letters, underscores, and digits, starting with a letter or underscore, and between 2 and 64 characters long"
examples = ["${PATH}", "${HOME}", "${USER}"]
required = false
type = "object"
key_pattern = "^[A-Z_][A-Z0-9_]{1,64}$"
value_type = "string"

# Tasks section - core functionality
[schema.tasks]
description = "Task definitions"
required = true
type = "object"
key_pattern = "^[a-zA-Z_][a-zA-Z0-9_\\-]*$"

# Task definition structure
[schema.tasks.task_definition]
description = "Individual task configuration"
type = "object"

[schema.tasks.task_definition.properties]

[schema.tasks.task_definition.properties.command]
type = "string"
description = "Shell command to execute"
required = true
min_length = 1

[schema.tasks.task_definition.properties.description]
type = "string"
description = "Human-readable description of the task"
required = false

[schema.tasks.task_definition.properties.dependencies]
type = "array"
description = "Tasks that must complete successfully before this task runs"
required = false
item_type = "string"
item_pattern = "^[a-zA-Z_][a-zA-Z0-9_\\-]*$"
unique_items = true

[schema.tasks.task_definition.properties.shell]
type = "string"
description = "Override default shell for this task"
required = false

[schema.tasks.task_definition.properties.work_dir]
type = "string"
description = "Override default working directory for this task"
required = false

[schema.tasks.task_definition.properties.confirm]
type = "boolean"
description = "Require user confirmation before executing this task"
required = false
default = false

[schema.tasks.task_definition.properties.destructive]
type = "boolean"
description = "Mark this task as potentially destructive"
required = false
default = false

[schema.tasks.task_definition.properties.timeout]
type = "string"
description = "Maximum execution time (e.g., '5m', '30s', '2h')"
required = false
pattern = "^[0-9]+[smh]$"

[schema.tasks.task_definition.properties.retry]
type = "object"
description = "Retry configuration for failed tasks"
required = false

[schema.tasks.task_definition.properties.retry.properties]

[schema.tasks.task_definition.properties.retry.properties.count]
type = "integer"
description = "Number of retry attempts"
minimum = 0
maximum = 10

[schema.tasks.task_definition.properties.retry.properties.delay]
type = "string"
description = "Delay between retry attempts"
pattern = "^[0-9]+[smh]$"

[schema.tasks.task_definition.properties.environment]
type = "object"
description = "Task-specific environment variables"
required = false
key_pattern = "^[A-Z_][A-Z0-9_]*$"
value_type = "string"

[schema.tasks.task_definition.properties.variables]
type = "object"
description = "Task-specific variables"
required = false
key_pattern = "^[a-zA-Z_][a-zA-Z0-9_]*$"
value_type = "string"

[schema.tasks.task_definition.properties.watch]
type = "array"
description = "File patterns to watch for automatic task re-execution"
required = false
examples = ["src/**/*.js", "config/*.json"]
item_pattern = "^[^\\0]+$"
item_description = "File pattern to watch"
item_type = "string"

[schema.tasks.task_definition.properties.condition]
type = "string"
description = "Condition that must be true for task to execute"
required = false
allowed_values = ["always", "on_change", "on_failure", "manual"]

# Environment-specific configurations
[schema.environments]
description = "Environment-specific configuration overrides"
required = false
type = "object"
key_pattern = "^[a-z_][a-z0-9_]*$"

[schema.environments.environment_definition]
description = "Configuration overrides for specific environment"
type = "object"

[schema.environments.environment_definition.properties]

[schema.environments.environment_definition.properties.variables]
type = "object"
description = "Environment-specific variables"
reference = "schema.variables"

[schema.environments.environment_definition.properties.environment]
type = "object"
description = "Environment-specific environment variables"
reference = "schema.environment"

[schema.environments.environment_definition.properties.tasks]
type = "object"
description = "Environment-specific task overrides"
reference = "schema.tasks"

# Validation rules and constraints
[schema.validation]
description = "Global validation rules applied across the configuration"

[schema.validation.rules]
no_circular_dependencies = "Task dependencies must not form circular references"
unique_task_names = "All task names must be unique within the configuration"
valid_dependencies = "All task dependencies must reference existing tasks"
safe_variable_names = "Variable names must not conflict with reserved keywords"
environment_naming = "Environment variable names must follow standard conventions"
